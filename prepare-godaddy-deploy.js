const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');
require('dotenv').config(); // Load environment variables from .env file

// Configuration
const buildDir = 'build-godaddy';
const backendFiles = ['contact.php'];
const reCaptchaSecretKey = process.env.RECAPTCHA_SECRET_KEY || '6Le62v4qAAAAAAvJOTQjJsi3cOCwxpZZAz3rUTom'; // Default or from .env

// Clean up previous build directory if it exists
if (fs.existsSync(buildDir)) {
  console.log(`Removing previous ${buildDir} directory...`);
  try {
    execSync(`rm -rf ${buildDir}`, { stdio: 'inherit' });
    console.log(`Previous ${buildDir} directory removed`);
  } catch (error) {
    console.error(`Error removing ${buildDir} directory:`, error);
    process.exit(1);
  }
}

// Create a fresh build directory
console.log(`Creating fresh ${buildDir} directory...`);
fs.mkdirSync(buildDir, { recursive: true });
console.log(`Created ${buildDir} directory`);

// Build the React app
console.log('Building React app...');
try {
  execSync('cd client && npm run build', { stdio: 'inherit' });
  console.log('React app built successfully');
} catch (error) {
  console.error('Error building React app:', error);
  process.exit(1);
}

// Copy the React build to the deployment directory
console.log('Copying React build files...');
try {
  execSync(`cp -r client/build/* ${buildDir}/`, { stdio: 'inherit' });
  console.log('React build files copied successfully');
} catch (error) {
  console.error('Error copying React build files:', error);
  process.exit(1);
}

// Copy backend PHP files
console.log('Copying PHP backend files...');
for (const file of backendFiles) {
  try {
    // Check if the file exists in the root directory
    if (fs.existsSync(file)) {
      fs.copyFileSync(file, path.join(buildDir, file));
      console.log(`Copied ${file} from root directory to ${buildDir}/${file}`);
    } 
    // If not in root, try client/public directory
    else if (fs.existsSync(path.join('client', 'public', file))) {
      fs.copyFileSync(path.join('client', 'public', file), path.join(buildDir, file));
      console.log(`Copied ${file} from client/public directory to ${buildDir}/${file}`);
    }
    else {
      console.warn(`Warning: Could not find ${file} in root or client/public directories`);
    }
  } catch (error) {
    console.error(`Error copying ${file}:`, error);
    process.exit(1);
  }
}

// Create .env.php file for server environment variables
console.log('Creating .env.php configuration file...');
try {
  const envPhpContent = `<?php
// Environment Configuration for Merlo Stone Website
// Generated by deployment script on ${new Date().toLocaleString()}

// reCAPTCHA Configuration  
define('RECAPTCHA_SECRET_KEY', '${reCaptchaSecretKey}');

// Email Configuration
define('EMAIL_TO', 'davemerlo@comcast.net');
define('EMAIL_BCC', 'bdmerlo@gmail.com');

// Debug/Logging Settings
define('ENABLE_DEBUG_LOGGING', false);
?>`;

  fs.writeFileSync(path.join(buildDir, '.env.php'), envPhpContent);
  console.log('Created .env.php configuration file');
} catch (error) {
  console.error('Error creating .env.php file:', error);
  process.exit(1);
}

// Now modify contact.php to use the .env.php configuration
try {
  const contactPhpPath = path.join(buildDir, 'contact.php');
  let contactPhpContent = fs.readFileSync(contactPhpPath, 'utf8');
  
  // Replace hardcoded reCAPTCHA key with the environment variable
  contactPhpContent = contactPhpContent.replace(
    /\$recaptchaSecret = ['"].*?['"]/,
    '$recaptchaSecret = RECAPTCHA_SECRET_KEY'
  );
  
  // Add include for .env.php at the top of the file
  contactPhpContent = `<?php
// Load environment configuration
require_once '.env.php';

${contactPhpContent.substring(6)}`; // Remove the first PHP tag
  
  fs.writeFileSync(contactPhpPath, contactPhpContent);
  console.log('Updated contact.php to use environment configuration');
} catch (error) {
  console.error('Error updating contact.php:', error);
  console.log('You may need to manually update contact.php to use the .env.php file');
}

console.log('\n**************************************');
console.log(`Deployment files ready in '${buildDir}' directory!`);
console.log('Upload ALL files from this directory to your GoDaddy hosting via FTP.');
console.log('**************************************\n');

// Print additional instructions
console.log('Deployment Instructions:');
console.log('1. Use an FTP client (like FileZilla) to connect to your GoDaddy hosting');
console.log('2. Upload all files from the build-godaddy directory to your web root (usually public_html)');
console.log('3. IMPORTANT: Make sure both contact.php and .env.php have permissions set to 644');
console.log('4. For security, set .env.php permissions to 600 (only readable by owner) after testing');
console.log('5. Test your form by submitting a test message');
console.log('6. Check both email addresses to verify receipt');
console.log('\nFor troubleshooting, check your server error logs or enable debugging in .env.php\n'); 